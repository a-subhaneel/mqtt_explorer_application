#pragma checksum "C:\Users\SubhaneelAgarwalla\Desktop\mqtt_files\mqtt_files\mqtt_explorer_app\mqtt_explorer_app\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "552c425d2b8de9f397e4b34a6844bfdd4688c5cb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\SubhaneelAgarwalla\Desktop\mqtt_files\mqtt_files\mqtt_explorer_app\mqtt_explorer_app\Views\_ViewImports.cshtml"
using mqtt_explorer_app;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\SubhaneelAgarwalla\Desktop\mqtt_files\mqtt_files\mqtt_explorer_app\mqtt_explorer_app\Views\_ViewImports.cshtml"
using mqtt_explorer_app.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"552c425d2b8de9f397e4b34a6844bfdd4688c5cb", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f3cb23e5b92df5b84418cd4c149ab1f6e9c3bc71", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("MQTT-qosLevel"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:100%"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE HTML>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb5073", async() => {
                WriteLiteral(@"
    <style type=""text/css"">
        .wrapper {
            column-count: 2;
            width: 100%;
        }
    </style>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js"" type=""text/javascript""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js"" type=""text/javascript""></script>
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <script type=""text/javascript"">
        var hostName;
        var portName;
        var pubMsg;
        var topicName;
        var qosLevelset;
        var mqRetain;
        var disconnectStatus;
        var client;
        var lwtTopicName;
        var lwtPayload;
        var lwtQos;
        var lwtRetain;

        // caleld to subscribe to a connection
        function TopicSubscription() {
            hostName = $(""#MQTT-host"").val();
            portName = +$(""#MQTT-port"").val();
            client = new Paho.MQTT.Client(hostName, portName, """);
                WriteLiteral(@"browser_clientId"" + Math.random());
            //Example client = new Paho.MQTT.Client(""m11.cloudmqtt.com"", 32903, ""web_"" + parseInt(Math.random() * 100, 10));
            client.onConnectionLost = onConnectionLost;
            client.onMessageArrived = onMessageArrived;
            var options = {
                useSSL: false,
                onSuccess: onConnect,
                onFailure: doFail,
                cleanSession: false,
            }

            // connect the client
            client.connect(options);
            $(""#btn_Publish"").prop(""disabled"", false);
            lwtTopicName = $(""#MQTT-LwtTopic"").val();
            $(""#MQTT-LwtTopic"").attr(""readonly"", true);
            lwtPayload = $(""#MQTT-LwtPayload"").val();
            $(""#MQTT-LwtPayload"").attr(""readonly"", true);
            lwtQos = +$(""#MQTT-LwtQosLevel option:selected"").text();
            $(""#MQTT-LwtQosLevel"").attr(""disabled"", true);
            lwtRetain = $('#MQTT-LwtRetain').is("":checked"");
         ");
                WriteLiteral(@"   $(""#MQTT-LwtRetain"").attr(""disabled"", true);
            $(""#btn_LwtDataSave"").prop(""disabled"", true)
            if (lwtPayload != null || lwtTopicName != null) {
                var lastWillMessage = new Paho.MQTT.Message(lwtPayload);
                lastWillMessage.destinationName = lwtTopicName;
                lastWillMessage.qos = lwtQos;
                lastWillMessage.retained = lwtRetain;
                options.willMessage = lastWillMessage;
            }
        }

        // called when the client connects
        function onConnect() {
            console.log(""onConnect"");
            Set_New_Console_Msg(""connected"");
            var topicName = $(""#MQTT-topic"").val();
            client.subscribe(topicName, { qos: 2 });
            Set_New_Console_Msg(topicName);
            message = new Paho.MQTT.Message('');
            message.destinationName = ""topic/set"";
        }
        function doFail(e) {
            console.log(e);
        }

        // called when the cli");
                WriteLiteral(@"ent loses its connection
        function onConnectionLost(responseObject) {
            if (responseObject.errorCode !== 0) {
                console.log(""onConnectionLost:"" + responseObject.errorMessage);
                Set_New_Console_Msg(""onConnectionLost:"" + responseObject.errorMessage);
            }
            $(""#MQTT-LwtTopic"").attr(""readonly"", false);
            $(""#MQTT-LwtPayload"").attr(""readonly"", false);
            $(""#MQTT-LwtQosLevel"").attr(""disabled"", false);
            $(""#MQTT-LwtRetain"").attr(""disabled"", false);
            $(""#btn_LwtDataSave"").prop(""disabled"", false)
        }

        //called to disconnect the connection
        function TopicDisconnect() {
            var topicName = $(""#MQTT-topic"").val();
            clientData = client;
            client.unsubscribe(topicName);
            client.disconnect();
            Set_New_Console_Msg(""topic unsubscribed:"" + topicName);
            $(""#btn_Publish"").prop(""disabled"", true);
            $(""#MQTT-LwtT");
                WriteLiteral(@"opic"").attr(""readonly"", false);
            $(""#MQTT-LwtPayload"").attr(""readonly"", false);
            $(""#MQTT-LwtQosLevel"").attr(""disabled"", false);
            $(""#MQTT-LwtRetain"").attr(""disabled"", false);
            $(""#btn_LwtDataSave"").prop(""disabled"", false)
            return;
        }

        // called when a message arrives
        function onMessageArrived(message) {
            console.log(""onMessageArrived:"" + message.payloadString);
            var topicName = $(""#MQTT-topic"").val();
            Set_New_Console_Msg(""Subscribed: Topic name: "" + topicName + "" : "" + message.payloadString + "" - qos:  "" + message.qos + "" -retain: "" + message.retained);
        }

        // Set MQTT Messages to TextArea
        function Set_New_Console_Msg(text) {
            document.getElementById(""txtAr_Console"").value = document.getElementById(""txtAr_Console"").value + get_Fromatted_Time().toString() + "":  "" + text + ""\n"";
            document.getElementById(""txtAr_Console"").scrollTop = docume");
                WriteLiteral(@"nt.getElementById(""txtAr_Console"").scrollHeight;
        }

        //Clear Console
        function clear_Console() {
            document.getElementById(""txtAr_Console"").value = """";
        }
        function get_Fromatted_Time() {
            var dt = new Date();
            var hours = dt.getHours() == 0 ? ""12"" : dt.getHours() > 12 ? dt.getHours() - 12 : dt.getHours();
            var minutes = (dt.getMinutes() < 10 ? ""0"" : """") + dt.getMinutes();
            var seconds = dt.getSeconds();
            var ampm = dt.getHours() < 12 ? ""AM"" : ""PM"";
            var formattedTime = hours + "":"" + minutes + "":"" + seconds + "" "" + ampm;
            return formattedTime;
        }

        //called to publish a message to a connection
        function TopicPublish() {
            debugger;
            var pubMsg = $(""#MQTT-publish"").val();
            var topicName = $(""#MQTT-topic"").val();
            var qosLevelset = +$(""#MQTT-qosLevel option:selected"").text();
            var mqRetain = $(");
                WriteLiteral(@"'#MQTT-retain').is("":checked"");
            message = new Paho.MQTT.Message(pubMsg);
            message.destinationName = topicName;
            message.retained = mqRetain;
            message.qos = qosLevelset;
            client.send(message);
            Set_New_Console_Msg(""Published: "" + ""\"""" + pubMsg + ""\"""" + ""to MQTT Topic: "" + ""\"""" + topicName + ""\"""");
            return;
        }

        //called to save lwt details 
         function SaveLWTdetails() {
            var x = document.getElementById(""snackbar"");
            x.className = ""show"";
            setTimeout(function () { x.className = x.className.replace(""show"", """"); }, 3000);
            lwtTopicName = $(""#MQTT-LwtTopic"").val();
            lwtPayload = $(""#MQTT-LwtPayload"").val();
            lwtQos = +$(""#MQTT-LwtQosLevel option:selected"").text();
            lwtRetain = $('#MQTT-LwtRetain').is("":checked"");
        }
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb13537", async() => {
                WriteLiteral("\r\n    <div class=\"container col-sm-12 col-xs-12\" style=\"padding: 0px 0px 0px 0px\" ;>\r\n        <div class=\"wrapper\" style=\"padding: 0px 0px 0px 0px\">\r\n\r\n");
                WriteLiteral(@"            <div class=""card"" style=""max-height:545px;padding-bottom:113px"">
                <label class=""col-sm-12 control-label"" style=""padding:20px 0px 0px 20px"">Subscription:</label>
                <div class=""wrapper row"" style=""margin-left:2px"">
                    <div class=""card-body"" style=""margin-bottom:-20px"">
                        <label class=""col-sm-12 control-label"" style=""margin-left:-12px"">Host:</label>
                        <input type=""text"" class=""form-control col-sm-12"" id=""MQTT-host"" value=""127.0.0.1"" placeholder=""Type MQTT host here..."">
                    </div>
                    <div class=""card-body"" style=""margin-bottom:0px"">
                        <label class=""col-sm-12 control-label"" style=""margin-left:-12px"">Port:</label>
                        <input type=""number"" class=""form-control col-sm-12"" id=""MQTT-port"" value=""8081"" placeholder=""Type MQTT port here..."">
                    </div>
                </div>

");
                WriteLiteral(@"                <div class=""card-body col-sm-12"">
                    <label class=""col-sm-12 control-label"" style=""margin: 0px 0px 8px -12px;padding:0px 0px 0px 15px"">Topic (subscribe & publish):</label>
                    <div class=""form-group col-sm-12"" style=""margin: 0px 0px 8px 0px;padding:0px 0px 0px 0px"">
                        <input type=""text"" class=""form-control col-sm-12"" id=""MQTT-topic"" value=""topic/set"" placeholder=""Type MQTT topic here..."" style=""margin: 0px 0px 8px 0px;padding:0px 0px 0px 15px"">
                    </div>
                    <br>
                    <div class=""form-group col-sm-6"" style=""margin: 0px 0px 8px 0px;padding:0px 0px 0px 0px"">
                        <button type=""button"" id=""btn_Clear_Console"" class=""mui-btn mui-btn--raised mui-btn--primary btn-outline-primary col-sm-12 ""
                                style=""margin: 0px 0px 0px 0px;padding:0px 0px 0px 0px;max-width:485px"" onclick=""TopicSubscription()"">
                            Subscribe
          ");
                WriteLiteral(@"              </button>
                    </div>
                    <div class=""form-group"" style=""margin-left:-10px;margin-bottom:60px"">
                        <p class=""col-sm-12""><sup>subscribe to topic to publish messages</sup></p>
                    </div>
                </div>
            </div>
            <br>

");
                WriteLiteral(@"            <div class=""card col-sm-12"" style=""max-height: 650px;height:545px"">
                <div class=""row"" style=""padding-bottom:-105px"">
                    <label class=""card-body col-sm-12"" style=""margin-bottom:-15px"">Last will & testament:</label>
                    <div class=""col-sm-6 card-body"">
                        <label class=""control-label"">LWT topic:</label>
                        <input type=""text"" class=""form-control"" id=""MQTT-LwtTopic"" value=""topic/set"" placeholder=""Type MQTT last will and testament topic here..."">
                    </div>
                    <div class=""col-sm-6 card-body"">
                        <label class=""control-label"">LWT payload:</label>
                        <input type=""text"" class=""form-control"" id=""MQTT-LwtPayload"" value=""browser client disconnected, battery drained!!"" placeholder=""Type MQTT last will and testament message here..."">
                    </div>
                    <div class=""col-sm-6 card-body"">
                        <l");
                WriteLiteral("abel class=\"col-sm-6 control-label\" style=\"margin-left:-12px\">Qos level:</label>\r\n                        <select class=\"form-control col-sm-12\" id=\"MQTT-LwtQosLevel\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb17844", async() => {
                    WriteLiteral("0");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("active", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb19822", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("active", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb21477", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("active", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""card-body col-sm-6"">
                        <label class=""col-sm-6 control-label form-group"" style=""margin-left:-15px"">Retain :</label>
                        <div class=""custom-checkbox"" style=""margin-top:-8px"">
                            <input type=""checkbox"" id=""MQTT-LwtRetain"" style=""width:19px;height:19px;margin-top:5px"" />
                            <label style=""margin-left:10px;margin-top:-2px"">
                                True
                            </label>
                        </div>
                    </div>
                    <div class=""card-body col-sm-6"">
                        <button type=""button"" id=""btn_LwtDataSave"" class=""mui-btn mui-btn--raised mui-btn--primary btn-outline-info col-sm-12 ""
                                style=""max-width:485px"" onclick=""SaveLWTdetails()"">
                            Save
                        </button>
                    <");
                WriteLiteral("/div>\r\n                </div>\r\n                <br>\r\n            </div>\r\n        </div>\r\n        <br>\r\n\r\n");
                WriteLiteral(@"        <div class=""wrapper"" style=""padding: 0px 0px 0px 0px"">
            <div class=""card col-sm-12"" style=""max-height: 650px;height:580px"">
                <div class=""row"">
                    <label class=""card-body col-sm-12"" style=""margin-bottom:-5px"">Publisher:</label>
                    <div class=""col-sm-12 card-body"" style=""margin-top:-10px"">
                        <label class=""control-label"">Publisher message:</label>
                        <input type=""text"" class=""form-control"" id=""MQTT-publish"" value=""message sent from browser"" placeholder=""Type MQTT publish message here..."">
                    </div>
                    <br>
                    <label class=""col-sm-12 control-label card-body"" style=""margin-top:-30px"">Publishing controls:</label>
                    <div class=""form-group col-sm-12 container"" style=""margin-top:-30px"">
                        <div class=""wrapper row"" style=""margin-left:2px"">
                            <div class=""card-body"" style=""margin-top: -");
                WriteLiteral(@"15px"">
                                <label class=""col-sm-12 control-label form-group"" style=""margin-left:-29px;"">Qos level:</label>
                                <div class=""container col-sm-12"">
                                    <select class=""form-control col-md-12"" id=""MQTT-qosLevel"" style=""margin-left:-29px"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb25829", async() => {
                    WriteLiteral("0");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("active", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb27819", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("active", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "552c425d2b8de9f397e4b34a6844bfdd4688c5cb29486", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("active", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                            <div class=""card-body"">
                                <label class=""col-sm-12 control-label form-group"" style=""margin-left:-15px"">Retain :</label>
                                <div class=""custom-checkbox"">
                                    <input type=""checkbox"" id=""MQTT-retain"" style=""width:19px;height:19px;margin-top:5px"" />
                                    <label style=""margin-left:10px;margin-top:-2px"">
                                        True
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br>
                    <br>
                    <div class=""col-sm-6 card-body"">
                        <button type=""button"" id=""btn_Publish"" disabled class=""mui-btn mui-btn--raised mui-btn-");
                WriteLiteral(@"-primary btn-outline-primary col-md-12""
                                onclick=""TopicPublish()"">
                            Publish
                        </button>
                    </div>
                    <div class=""col-sm-6 card-body"" style=""padding-bottom:37px"">
                        <button type=""button"" id=""btn_Disconnect"" class=""mui-btn mui-btn--raised mui-btn--primary btn-outline-danger col-md-12""
                                onclick=""TopicDisconnect()"">
                            Disconnect
                        </button>
                        <br>
                    </div>
                </div>
                <br>
            </div>
            <br>
            <div class=""card"" style=""max-height: 650px;height:580px"">
                <div class=""form-group card-body"">
                    <label class=""col-sm-12 control-label"" for=""txtAr_Console"">Console:</label>
                    <textarea ype=""textarea"" class=""form-control"" rows=""12"" cols=""100"" id=""txtAr_C");
                WriteLiteral(@"onsole"" style=""max-width:1100px;max-height:420px;height:420px""></textarea>
                    <div class=""form-group col-sm-6"" style=""margin: 0px 0px 8px 0px;padding:0px 0px 0px 0px"">
                        <button type=""button"" id=""btn_Clear_Console"" style=""cursor:pointer"" class=""mui-btn mui-btn--raised mui-btn--primary btn-outline-warning col-sm-12"" onclick=""clear_Console();"">Clear Console</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>
    <br>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</html>
<style>
    #snackbar {
        visibility: hidden;
        min-width: 250px;
        margin-left: -125px;
        background-color: #333;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        float: right;
        z-index: 1;
        left: 50%;
        bottom: 30px;
        font-size: 17px;
    }
        #snackbar.show {
            visibility: visible;
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }
    ");
            WriteLiteral("@-webkit-keyframes fadein {\r\n        from {\r\n            bottom: 0;\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            bottom: 30px;\r\n            opacity: 1;\r\n        }\r\n    }\r\n    ");
            WriteLiteral("@keyframes fadein {\r\n        from {\r\n            bottom: 0;\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            bottom: 30px;\r\n            opacity: 1;\r\n        }\r\n    }\r\n    ");
            WriteLiteral("@-webkit-keyframes fadeout {\r\n        from {\r\n            bottom: 30px;\r\n            opacity: 1;\r\n        }\r\n        to {\r\n            bottom: 0;\r\n            opacity: 0;\r\n        }\r\n    }\r\n    ");
            WriteLiteral("@keyframes fadeout {\r\n        from {\r\n            bottom: 30px;\r\n            opacity: 1;\r\n        }\r\n        to {\r\n            bottom: 0;\r\n            opacity: 0;\r\n        }\r\n    }\r\n</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
